name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_MANTIS }}  

jobs:
  restore_dependencies:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest
    
    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md
   # - name: PHPUnit Tests
   #   uses: php-actions/phpunit@dynamic-docker
     # with:
     #     bootstrap: vendor/phpunit/phpunit/bootstrap.php
       #   configuration: vendor/phpunit/phpunit/phpunit.xml
       #   args: --coverage-text
  docker_create_and_publish:
    needs: [restore_dependencies]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Build the docker-compose stack
      run: docker-compose up -d
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
    - name: push_php_app
      uses: docker/build-push-action@v2
      with:
          context: .
          file: ./php.Dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: php:latest
